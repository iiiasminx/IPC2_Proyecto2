/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package tallermecánico.Interfaz.IClientes;

import CosasDinamicas.ListaNormal;
import CosasDinamicas.ListaSimpleCircular;
import Objetos.ObjCarro;
import Objetos.ObjEmpleado;
import Objetos.ObjOrdenTrabajo;
import Objetos.ObjRepuestos;
import Objetos.ObjServicios;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import tallermecánico.Interfaz.Cliente;
import tallermecánico.TallerMecánico;
import java.util.Date;

/**
 *
 * @author Yásmin
 */
public class RegistrarAuto extends javax.swing.JFrame {

    
    
    public RegistrarAuto() {
        initComponents();
        mostrar();
        meterATablaAutos();
        meterATablaServicios();
                
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Ingresar Auto");

        jButton1.setText("Regresar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre", "Marca", "Modelo", "Precio"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Placa", "Marca", "Modelo"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        jButton2.setText("Registrar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel2.setText("Tus Autos");

        jLabel3.setText("Servicios Disponibles");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 388, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton1)
                                .addGap(250, 250, 250)
                                .addComponent(jLabel1)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(168, 168, 168)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 290, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addGap(171, 171, 171))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(jLabel1)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36)
                .addComponent(jButton2)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        Cliente c1 = new Cliente();
        c1.setVisible(true);
        dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        int auto = jTable2.getSelectedRow();
        int servicio = jTable1.getSelectedRow();
        
        System.out.println("\n\n");
        ListaSimpleCircular<ObjCarro> listaaa = TallerMecánico.clienteEnUso.getListaCarros();
        listaaa.obtenerr(auto);
        ObjCarro carroSeleccionado = listaaa.buscado.getElemento();
        
        TallerMecánico.l3.obtenerr(servicio);
        ObjServicios servicioSeleccionado = TallerMecánico.l3.buscado.getElemento();
        
        if (servicioSeleccionado.getMarca().equals(carroSeleccionado.getMarca()) || 
                servicioSeleccionado.getModelo().equals(carroSeleccionado.getMarca())) {            

            
            int comprobante = 0;
            
//            while (comprobante < 1) {
                
                
                for (int i = 0; i < TallerMecánico.l1.tamanio(); i++) {
                                        
                    TallerMecánico.l1.obtenerr(i);
                    ObjEmpleado obtenido = TallerMecánico.l1.buscado.getElemento();                    
                    
                    if (obtenido.getRol().equals("mecanico") && (comprobante<1) ) {
                        System.out.println("mecánico encontrado: " + obtenido.getNombre() + 
                                " " + obtenido.getRol() + " " + obtenido.getEstado());
                        String estadoo = obtenido.getEstado();                        
                        
                        if (estadoo.equals("disponible")) {
                            obtenido.setCarroAsignado(carroSeleccionado);
                            obtenido.setEstado("ocupado");
                            System.out.println("Carro asignado a: " + obtenido.getNombre());
                            System.out.println("Estado de: " + obtenido.getNombre() + " = "
                                    + obtenido.getEstado());

                            carroSeleccionado.setEstado("en servicio");

                            System.out.println("El carro de: "
                                    + carroSeleccionado.getDueño() + " está: "
                                    + carroSeleccionado.getEstado());
                            
                                                      
                            // AQUI EMPIEZA LO QUE ESTABA ANTES ABAJO

                            // AQUI ESTOY CREANDO LA ORDEN DE TRABAJO Y TODO 
                            String estado = "en servicio";

                            ObjOrdenTrabajo obj1 = new ObjOrdenTrabajo(TallerMecánico.contandingOrdenes,
                                    carroSeleccionado, TallerMecánico.clienteEnUso, servicioSeleccionado, estado);
                            carroSeleccionado.setEstado(estado);

                            obj1.setEmpleado(obtenido);
                            
                            // agregando fecha 
                            
                            Date fecha = new Date();
                            String fechaa = fecha.toString();
                            System.out.println(fechaa);
                            
                            obj1.setFecha(fechaa);
                            
                            // fin agregando fecha
                            
                            obtenido.setOrdenAsignada(obj1);

                            TallerMecánico.l8.agregar(obj1);

                            TallerMecánico.contandingOrdenes++;

                            System.out.println("ya estoy en servicio :'D");
                            JOptionPane.showMessageDialog(null, "Su carro ha sido agregado :'D");
                            System.out.println("Imprimiento lista: ");
                            TallerMecánico.l8.imprimir();
                            System.out.println("");
                            break;
                        } else{
                            System.out.println("No hay mecánicos disponibles");
                            carroSeleccionado.setEstado("en cola");
                        }
                        
                    }
                    
                }
                
                
                
                if (carroSeleccionado.getEstado().equals("en servicio")) {

                } 
                
                //AQUI PONGO QUE PASA SI YA NO HAY MECÁNICOS
                // AQUI EMPIEZA LO QUE ME INTERESA
                
                else {
                    System.out.println("entro al else");
                    String estado = "en cola";

                    ObjOrdenTrabajo obj1 = new ObjOrdenTrabajo(TallerMecánico.contandingOrdenes,
                            carroSeleccionado, TallerMecánico.clienteEnUso, servicioSeleccionado, estado);
                    carroSeleccionado.setEstado(estado);
                    
                    TallerMecánico.contandingOrdenes++;

                    if (TallerMecánico.clienteEnUso.getTipo().equals("oro")) {
                        //agregar al inicio
                        TallerMecánico.l7.apilar(obj1);
                        System.out.println("Carro de cliente oro agregado a cola");
                    } else {
                        //agregar al final
                        TallerMecánico.l7.agregar(obj1);
                        System.out.println("Carro de cliente ñah agregado a cola");
                    }
                    
                    TallerMecánico.l7.imprimir();
                    
                    JOptionPane.showMessageDialog(null, "Su carro está en la cola de espera D:");
                    
                    comprobante++;
                }
                
//            }
            
//            JOptionPane.showMessageDialog(null, "Su carro ha sido agregado :D");
            int servicios = TallerMecánico.clienteEnUso.getContaServicios();
            servicios++;            
            TallerMecánico.clienteEnUso.setContaServicios(servicios);
            System.out.println("Tu numero de servicios es: " + TallerMecánico.clienteEnUso.getContaServicios());
            
            if (servicios == 3) {
                TallerMecánico.clienteEnUso.setTipo("oro");
                JOptionPane.showMessageDialog(null, "Felicidades!! Has pasado a ser oro :'D");
            }
        } else{
            JOptionPane.showMessageDialog(null, "Auto y Servicios no coinciden :C");
        }
        
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RegistrarAuto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RegistrarAuto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RegistrarAuto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RegistrarAuto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RegistrarAuto().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    // End of variables declaration//GEN-END:variables

    private void mostrar() {
        
    TallerMecánico.tablitaRAAutos = (DefaultTableModel) jTable2.getModel();
    TallerMecánico.tablitaRAServicios = (DefaultTableModel) jTable1.getModel();
       
       
    }

    private void meterATablaAutos() {
        try {
           int contador = 0;
//           
           System.out.println("Imprimiento Autos");

           // Esta es la lista de clientes
           
           ListaSimpleCircular<ObjCarro> listaCCarros =  TallerMecánico.clienteEnUso.getListaCarros();
           
           // Esta es la lista de carros
            contador = 0;

            while (contador < listaCCarros.tamanio()) {

                listaCCarros.obtenerr(contador);
                ObjCarro encontrado = listaCCarros.buscado.getElemento();                

//                for (int i = 0; i < TallerMecánico.l6.tamanio(); i++) {
//                    TallerMecánico.l6.obtenerr(i);

                    TallerMecánico.tablitaRAAutos.addRow(new Object[]{
                        encontrado.getPlaca(), encontrado.getMarca(),
                        encontrado.getModelo()});
//                }
                contador++;
            }
        } catch (Exception e) {
            System.out.println(e);
        }
    }

    private void meterATablaServicios() {
        try {
           int contador = 0;
//           
           System.out.println("Imprimiento Servicios");

           // Esta es la lista de clientes
           
           ListaNormal<ObjServicios> listaServicios =  TallerMecánico.l3;
           
           // Esta es la lista de carros
            contador = 0;

            while (contador < listaServicios.tamanio()) {

                listaServicios.obtenerr(contador);
                ObjServicios encontrado = listaServicios.buscado.getElemento();                

//                for (int i = 0; i < TallerMecánico.l6.tamanio(); i++) {
//                    TallerMecánico.l6.obtenerr(i);

                    TallerMecánico.tablitaRAServicios.addRow(new Object[]{
                        encontrado.getNombre(), encontrado.getMarca(),
                        encontrado.getModelo(), encontrado.getPrecio()});
//                }
                contador++;
            }
        } catch (Exception e) {
            System.out.println(e);
        }
    
    }
}
