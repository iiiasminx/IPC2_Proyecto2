/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package tallermecánico.Interfaz.IAdmin;

import Objetos.ObjCliente;
import java.awt.Desktop;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.PrintStream;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import tallermecánico.TallerMecánico;

/**
 *
 * @author Yásmin
 */
public class ReporteClientes extends javax.swing.JFrame {

    int contadorOro, contadorNormal;
    
    int clienteNormal, clienteOro;
    // Esta cosa es como el FileWriter pero con binario.
    // Es algo como que lo mismo pero donde puedo agregar más cosas
    // como imagenes y así.
    FileOutputStream miDocumento;
    
    // Esto imprime lo de arriba
    PrintStream cosoImpreso;
     public String miHTML, miRuta;
     
     
    /**
     * Creates new form ReporteClientes
     */
    public ReporteClientes() {
        initComponents();
        mostrar();
        meterATabla();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Tipo", "Id", "Nombre", "Usuario", "Contraseña"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jLabel1.setText("ReporteClientes");

        jButton1.setText("Regresar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Generar HTML");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Escoger Ruta");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel2.setText("Ruta");

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 531, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton1)
                                .addGap(134, 134, 134)
                                .addComponent(jLabel1)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(209, 209, 209)
                                .addComponent(jButton3))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(55, 55, 55)
                                .addComponent(jLabel2)
                                .addGap(69, 69, 69)
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 331, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(205, 205, 205)
                .addComponent(jButton2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton1)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(jButton3)
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addComponent(jButton2)
                .addContainerGap(22, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
//        Reportes r1 = new Reportes();
//        r1.setVisible(true);
        dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // AQUI ES DONDE DE UNA VEZ LE PONGO NOMBRE A MI REPORTE
        
        JOptionPane.showMessageDialog(null, "NOTA! al colocar el nombre de tu archivo, "
                + "debes colocar el .html de una vez!! O.O");
        JFileChooser dlg = new JFileChooser();
                int opcion = dlg.showSaveDialog(null);
                
                if (opcion == JFileChooser.APPROVE_OPTION) {
                    
                    File f= dlg.getSelectedFile();
                    jTextField1.setText(f.toString());
                    
                }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        try {
            crearHTML(jTextField1.getText());
        } catch (FileNotFoundException ex) {
            Logger.getLogger(ReporteClientes.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        try{
        File o = new File(miRuta);
        Desktop.getDesktop().open(o);
       } catch (Exception e){
           System.out.println(e);
       }
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ReporteClientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ReporteClientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ReporteClientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ReporteClientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ReporteClientes().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables

    private void mostrar() {
        TallerMecánico.tablitaRClientes = (DefaultTableModel) jTable1.getModel();
       
    }

    private void meterATabla() {
         // OBTIENE Y METE CLIENTES ORO
        try {
            int contador = 0;
           contadorOro = 0;
           
            System.out.println("Imprimiento Clientes");
            TallerMecánico.l4.imprimir();
            System.out.println(TallerMecánico.l4.tamanio());

            while (contador < TallerMecánico.l4.tamanio()) {

                TallerMecánico.l4.obtenerr(contador);
                ObjCliente encontrado = TallerMecánico.l4.buscado.getElemento();

                if (encontrado.getTipo().equals("oro")) {
                    TallerMecánico.tablitaRClientes.addRow(new Object[]{
                        encontrado.getTipo(), encontrado.getId(), encontrado.getNombre(),
                        encontrado.getUsuario(),
                        encontrado.getComtraseña()});
                    contadorOro++;
                }
                contador++;
            }

            System.out.println(contadorOro);
        } catch (Exception e) {
            System.out.println(e);
        } 
        
        // OBTIENE Y METE CLIENTES NORMALES
        
        try {
            int contador = 0;
            contadorNormal = 0;

            while (contador < TallerMecánico.l4.tamanio()) {

                TallerMecánico.l4.obtenerr(contador);
                ObjCliente encontrado = TallerMecánico.l4.buscado.getElemento();

                if (encontrado.getTipo().equals("oro")) {
                } else{
                    
                    TallerMecánico.tablitaRClientes.addRow(new Object[]{
                     encontrado.getTipo(),encontrado.getId(), encontrado.getNombre(),
                    encontrado.getUsuario(),
                    encontrado.getComtraseña() });    
                    contadorNormal++;
                }
                contador++;
            }

            System.out.println(contadorNormal);
        } catch (Exception e) {
            System.out.println(e);
        }
    }
    
    private void crearHTML(String ruta) throws FileNotFoundException{
       this.miRuta = ruta;        
        // esto nevcesita una ruta donde guardarse
        miDocumento = new FileOutputStream(miRuta);
        cosoImpreso = new PrintStream(miDocumento); 
        
        miHTML = "<!DOCTYPE HTML><html><head>"
                + "<title>Reporte Clientes</title>"
                + "<meta charset=\"utf-8\">"                
                + "</head>"
                + "<body><h1>Reporte Clientes</h1>"
                + "<h2>Lista de Clientes</h2>";
        
        // aqui agrego la tabla
        
        miHTML = miHTML + "<table border=\"1\">"
                + "<thead>"
                + "<tr><th><strong>Tipo</strong></th>"
                + "<th><strong>Id</strong></th>"
                + "<th><strong>Nombre</strong></th>"
                + "<th><strong>Usuario</strong></th>"
                + "<th><strong>Contraseña</strong></th></tr></thead>"
                + "<tbody>";
        
        // AGREGANDO A LOS CLIENTES ORO
        try {
            int contador = 0;
           clienteOro = 0;
           
            System.out.println("Imprimiento Clientes");
            TallerMecánico.l4.imprimir();
            System.out.println(TallerMecánico.l4.tamanio());

            while (contador < TallerMecánico.l4.tamanio()) {

                TallerMecánico.l4.obtenerr(contador);
                ObjCliente encontrado = TallerMecánico.l4.buscado.getElemento();

                if (encontrado.getTipo().equals("oro")) {
                    clienteOro++;

                    miHTML = miHTML
                            + "<tr><td>" + encontrado.getTipo() + "</td>" 
                            + "<td>" + encontrado.getId().toString() + "</td>"
                            + "<td>" + encontrado.getNombre() + "</td>"
                            + "<td>" + encontrado.getUsuario() + "</td>"
                            + "<td>" + encontrado.getComtraseña() + "</td>"
                            + " </tr>";
                }
                contador++;
            }

            System.out.println(clienteOro);
        } catch (Exception e) {
            System.out.println(e);
        }
        
        // AGREGANDO A LOS CLIENTES NORMALES
        try {
            int contador = 0;
           clienteNormal = 0;
                      

            while (contador < TallerMecánico.l4.tamanio()) {

                TallerMecánico.l4.obtenerr(contador);
                ObjCliente encontrado = TallerMecánico.l4.buscado.getElemento();

                if (encontrado.getTipo().equals("oro")) {
                } else {
                    clienteNormal++;

                    miHTML = miHTML
                            + "<tr><td>" + encontrado.getTipo() + "</td>" 
                            + "<td>" + encontrado.getId().toString() + "</td>"
                            + "<td>" + encontrado.getNombre() + "</td>"
                            + "<td>" + encontrado.getUsuario() + "</td>"
                            + "<td>" + encontrado.getComtraseña() + "</td>"
                            + " </tr>";
                }
                contador++;
            }

            System.out.println(clienteNormal);
        } catch (Exception e) {
            System.out.println(e);
        }
                

        miHTML = miHTML + "</tbody></table></div><br><br><br>";
         miHTML = miHTML + "<canvas class='line-chart' width='800' height='450'></canvas>"
                + "<script src = 'https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.5.0/Chart.min.js'></script>"
                + "<script>"
                + "var nosequestoyhaciendo = document.getElementsByClassName('line-chart');"
                + "var chartGraph = new Chart(nosequestoyhaciendo, {"
                + "	type: 'pie',"
                + "	data: {			"
                + "     labels: ['Cliente Oro', 'Cliente Normal'],"
                + "     datasets: [{		"
                + " 	label: 'Cantidad',"
                + "		backgroundColor: [\"#9c34c1\", \"#ff7777\"],"
                + "		data: [" + clienteOro + ", " + clienteNormal + "],		"
                + "     }],			"
                + "}});</script>";
        
        miHTML = miHTML + "</body></html>";

        
        cosoImpreso.println(miHTML);
        cosoImpreso.close();
        System.out.println("Cosito creado :D");
    }
}
